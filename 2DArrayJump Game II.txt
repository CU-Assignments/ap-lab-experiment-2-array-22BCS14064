class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        if (n <= 1) return 0; // Already at the last index

        int jumps = 0, farthest = 0, currentEnd = 0;

        for (int i = 0; i < n - 1; i++) {
            farthest = max(farthest, i + nums[i]); // Update farthest reach
            
            if (i == currentEnd) { // Need to jump
                jumps++;
                currentEnd = farthest;
                
                if (currentEnd >= n - 1) break; // If we reach the end, stop
            }
        }

        return jumps;
    }
};